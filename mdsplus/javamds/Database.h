/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class Database */

#ifndef _Included_Database
#define _Included_Database
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     Database
 * Method:    addDevice
 * Signature: (Ljava/lang/String;Ljava/lang/String;)LNidData;
 */
JNIEXPORT jobject JNICALL Java_Database_addDevice
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     Database
 * Method:    addNode
 * Signature: (Ljava/lang/String;I)LNidData;
 */
JNIEXPORT jobject JNICALL Java_Database_addNode
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     Database
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Database_close
  (JNIEnv *, jobject);

/*
 * Class:     Database
 * Method:    executeDelete
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Database_executeDelete
  (JNIEnv *, jobject);

/*
 * Class:     Database
 * Method:    getData
 * Signature: (LNidData;)LData;
 */
JNIEXPORT jobject JNICALL Java_Database_getData
  (JNIEnv *, jobject, jobject);

/*
 * Class:     Database
 * Method:    getDefault
 * Signature: ()LNidData;
 */
JNIEXPORT jobject JNICALL Java_Database_getDefault
  (JNIEnv *, jobject);

/*
 * Class:     Database
 * Method:    getInfo
 * Signature: (LNidData;)LNodeInfo;
 */
JNIEXPORT jobject JNICALL Java_Database_getInfo
  (JNIEnv *, jobject, jobject);

/*
 * Class:     Database
 * Method:    getMembers
 * Signature: (LNidData;)[LNidData;
 */
JNIEXPORT jobjectArray JNICALL Java_Database_getMembers
  (JNIEnv *, jobject, jobject);

/*
 * Class:     Database
 * Method:    getSons
 * Signature: (LNidData;)[LNidData;
 */
JNIEXPORT jobjectArray JNICALL Java_Database_getSons
  (JNIEnv *, jobject, jobject);

/*
 * Class:     Database
 * Method:    getTags
 * Signature: (LNidData;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_Database_getTags
  (JNIEnv *, jobject, jobject);

/*
 * Class:     Database
 * Method:    isOn
 * Signature: (LNidData;)Z
 */
JNIEXPORT jboolean JNICALL Java_Database_isOn
  (JNIEnv *, jobject, jobject);

/*
 * Class:     Database
 * Method:    open
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Database_open
  (JNIEnv *, jobject);

/*
 * Class:     Database
 * Method:    putData
 * Signature: (LNidData;LData;)V
 */
JNIEXPORT void JNICALL Java_Database_putData
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     Database
 * Method:    quit
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Database_quit
  (JNIEnv *, jobject);

/*
 * Class:     Database
 * Method:    renameNode
 * Signature: (LNidData;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_Database_renameNode
  (JNIEnv *, jobject, jobject, jstring);

/*
 * Class:     Database
 * Method:    resolve
 * Signature: (LPathData;)LNidData;
 */
JNIEXPORT jobject JNICALL Java_Database_resolve
  (JNIEnv *, jobject, jobject);

/*
 * Class:     Database
 * Method:    setDefault
 * Signature: (LNidData;)V
 */
JNIEXPORT void JNICALL Java_Database_setDefault
  (JNIEnv *, jobject, jobject);

/*
 * Class:     Database
 * Method:    setOn
 * Signature: (LNidData;Z)V
 */
JNIEXPORT void JNICALL Java_Database_setOn
  (JNIEnv *, jobject, jobject, jboolean);

/*
 * Class:     Database
 * Method:    setTags
 * Signature: (LNidData;[Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_Database_setTags
  (JNIEnv *, jobject, jobject, jobjectArray);

/*
 * Class:     Database
 * Method:    startDelete
 * Signature: ([LNidData;)[LNidData;
 */
JNIEXPORT jobjectArray JNICALL Java_Database_startDelete
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     Database
 * Method:    write
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Database_write
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
