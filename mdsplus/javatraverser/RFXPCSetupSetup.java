/*
		A basic implementation of the DeviceSetup class.
*/

import java.awt.*;

public class RFXPCSetupSetup extends DeviceSetup
{
	public RFXPCSetupSetup(Frame parent)
	{
		super(parent);
		
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setDeviceProvider("150.178.3.101");
		setDeviceTitle("RFX Waveform setup");
		setDeviceType("RFXPCSetup");
		getContentPane().setLayout(null);
		setSize(582,387);
		deviceField1.setNumCols(20);
		deviceField1.setTextOnly(true);
		deviceField1.setOffsetNid(1);
		deviceField1.setLabelString("Comment: ");
		getContentPane().add(deviceField1);
		deviceField1.setBounds(12,12,372,36);
		deviceChoice1.setUpdateIdentifier("WAVE");
		deviceChoice1.setOffsetNid(2);
		{
			String[] tempString = new String[3];
			tempString[0] = "Voltage";
			tempString[1] = "Current";
			tempString[2] = "OpenLoop";
			deviceChoice1.setChoiceItems(tempString);
		}
		deviceChoice1.setLabelString("Control:");
		getContentPane().add(deviceChoice1);
		deviceChoice1.setBounds(12,48,180,40);
		deviceWave1.setUpdateExpression("AAMaxValue(_pcwindow, $, _pcconfig)");
		deviceWave1.setUpdateIdentifier("WAVE");
		deviceWave1.setOffsetNid(3);
		getContentPane().add(deviceWave1);
		deviceWave1.setBounds(12,96,564,240);
		getContentPane().add(deviceButtons1);
		deviceButtons1.setBounds(168,348,281,40);
		deviceField2.setNumCols(3);
		deviceField2.setIdentifier("pcwindow");
		deviceField2.setOffsetNid(8);
		deviceField2.setLabelString("Window: ");
		deviceField2.setDisplayEvaluated(true);
		deviceField2.setEditable(false);
		getContentPane().add(deviceField2);
		deviceField2.setBounds(432,48,132,40);
		deviceField3.setIdentifier("pcconfig");
		deviceField3.setTextOnly(true);
		deviceField3.setOffsetNid(9);
		deviceField3.setLabelString("Config.:");
		deviceField3.setDisplayEvaluated(true);
		deviceField3.setEditable(false);
		getContentPane().add(deviceField3);
		deviceField3.setBounds(372,12,204,40);
		deviceField4.setTextOnly(true);
		deviceField4.setOffsetNid(10);
		deviceField4.setLabelString("Enabled units: ");
		deviceField4.setDisplayEvaluated(true);
		deviceField4.setEditable(false);
		getContentPane().add(deviceField4);
		deviceField4.setBounds(192,48,228,40);
		//}}
	}

	public RFXPCSetupSetup()
	{
		this((Frame)null);
	}

	public RFXPCSetupSetup(String sTitle)
	{
		this();
		setTitle(sTitle);
	}

	static public void main(String args[])
	{
		(new RFXPCSetupSetup()).setVisible(true);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();

		super.addNotify();

		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;

		// Adjust size of frame according to the insets
		Insets insets = getInsets();
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	DeviceField deviceField1 = new DeviceField();
	DeviceChoice deviceChoice1 = new DeviceChoice();
	DeviceWave deviceWave1 = new DeviceWave();
	DeviceButtons deviceButtons1 = new DeviceButtons();
	DeviceField deviceField2 = new DeviceField();
	DeviceField deviceField3 = new DeviceField();
	DeviceField deviceField4 = new DeviceField();
	//}}

}