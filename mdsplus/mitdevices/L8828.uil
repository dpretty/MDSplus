/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * Builder Xcessory 3.5.1 VMS.
 *
 */
module l8828_uil
version = 'V1.0'
names = case_sensitive
!(BX) bx_info("app_class", "BuilderProduct")
!(BX) bx_info("app_name", "builderProduct")
!(BX) bx_info("app_defaults", "APP-DEFAULTS.DAT")
!(BX) bx_info("c++_old_construct", "false")
!(BX) bx_info("c++_unmanage_dialogs", "true")
!(BX) bx_info("c++_gen_derived", "true")
!(BX) bx_info("c++_target", "MAIN-CXX.EXE")
!(BX) bx_info("c++_hdrext", "HXX")
!(BX) bx_info("c++_srcext", "CXX")
!(BX) bx_info("c++_callbacks", "CALLBACKS-CXX", true)
!(BX) bx_info("c++_utilities", "BXUTIL-CXX.CXX", true)
!(BX) bx_info("c++_constants", "DEFS-CXX", true)
!(BX) bx_info("c++_baseclass", "UICOMPONENTXX", true)
!(BX) bx_info("c++_main", "MAIN-CXX.CXX", true)
!(BX) bx_info("c++_makefile", "MAKEFILE-CXX.MMS", true)
!(BX) bx_info("c++_imakefile", "MAKEFILE-CXX.COM", true)
!(BX) bx_info("c_reverse_dialogs", "true")
!(BX) bx_info("c_dialogs_in_routine", "true")
!(BX) bx_info("c_unmanage_dialogs", "true")
!(BX) bx_info("c_target", "MAIN-C.EXE")
!(BX) bx_info("c_utilities", "BXUTIL-C.C", true)
!(BX) bx_info("c_constants", "CREATION-C.H", true)
!(BX) bx_info("c_callbacks", "CALLBACKS-C.C", true)
!(BX) bx_info("c_creation", "CREATION-C.C", true)
!(BX) bx_info("c_main", "MAIN-C.C", true)
!(BX) bx_info("c_makefile", "MAKEFILE-C.MMS", true)
!(BX) bx_info("c_imakefile", "MAKEFILE-C.COM", true)
!(BX) bx_info("uil_target", "MAIN-UIL.EXE")
!(BX) bx_info("uil_utilities", "BXUTIL-UIL.C", true)
!(BX) bx_info("uil_constants", "MAIN-UIL.H", true)
!(BX) bx_info("uil_callbacks", "CALLBACKS-UIL.C", true)
!(BX) bx_info("uil_uil", "T.UIL", true)
!(BX) bx_info("uil_main", "MAIN-UIL.C", true)
!(BX) bx_info("uil_makefile", "MAKEFILE-UIL.MMS", true)
!(BX) bx_info("uil_imakefile", "MAKEFILE-UIL.COM", true)
!(BX) bx_info("include_path", "[]", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("c++_libraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12.exe/s"&
!(BX)	"hare,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$xtlibshrr5."&
!(BX)	"exe/share,sys$share:decw$xlibshr.exe/share,sys$share:decc$shr.exe/sh"&
!(BX)	"are")
!(BX) bx_info("c++_flags", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("c++_cc", "CC")
!(BX) bx_info("system_directory", "BX$SYSTEM:")
!(BX) bx_info("builder_version", "Builder Xcessory 3.5.1 VMS")
!(BX) bx_info("uil", "uil")
!(BX) bx_info("cc", "cc")
!(BX) bx_info("cpp", "CC")
!(BX) bx_info("cOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("cOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12.ex"&
!(BX)	"e/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$xtlib"&
!(BX)	"shrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:decc$s"&
!(BX)	"hr.exe/share")
!(BX) bx_info("uilCOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("uilUILOutputIncludes", "/motif")
!(BX) bx_info("uilOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12."&
!(BX)	"exe/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$x"&
!(BX)	"tlibshrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:"&
!(BX)	"decc$shr.exe/share")
!(BX) bx_info("cppOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("cppOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12."&
!(BX)	"exe/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$x"&
!(BX)	"tlibshrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:"&
!(BX)	"decc$shr.exe/share")
!(BX) bx_info("builder_version", "Builder Xcessory 3.5.1 VMS")
!(BX) bx_info("ansi", "false")
!(BX) bx_info("use_locales", "false")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "true")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o")

value 
    DEVICE_NID :  -1;
    L8828$K_CONG_NODES : 14;
    L8828$N_HEAD : 0;
    L8828$N_NAME : 1;
    L8828$N_COMMENT : 2;
    L8828$N_TRIGGER : 3;
    L8828$N_CLOCK : 4;
    L8828$N_EXT_CLOCK : 5;
    L8828$N_PRE_TRIG : 6;
    L8828$N_ACTIVE_MEM : 7;
    L8828$K_NODES_PER_INP : 4;
    L8828$K_INP_HEAD :  0;
    L8828$K_INP_ENDIDX :  2;
    L8828$K_INP_STARTIDX :  1;
    L8828$K_INP_OFFSET :  3;
    L8828$N_INPUTS : 8;
    L8828$N_INPUT_STARTIDX : 9;
    L8828$N_INPUT_ENDIDX : 10;
    L8828$N_INPUT_OFFSET : 11;
    L8828$N_INIT_ACTION : 12;
    L8828$N_STORE_ACTION : 13;

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};


!(BX)object dialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNx = 217;
!(BX)        XmNy = 186;
!(BX)        XmNwidth = 590;
!(BX)        XmNheight = 433;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog l8828;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object L8828 : XmFormDialog widget {
    arguments {
        XmNautoUnmanage = false;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNdialogTitle = compound_string("LeCroy 8828");
        XmNx = 217;
        XmNy = 186;
        XmNheight = 433;
    };
    controls {
         managed XmdsNidOptionMenu nidOptionMenu1;
         managed XmdsDigChans digChans;
         managed XmBulletinBoard bulletinBoard;
         managed XmdsExprField externalClock;
         managed XmLabel extClockLabel;
         managed XmdsExprField trigger;
         managed XmLabel triggerLabel;
         managed XmForm bottomButtons;
         managed XmdsExprField commentField;
         managed XmLabelGadget commentLabel;
         managed XmdsExprField nameField;
         managed XmLabelGadget nameLabel;
    };
    callbacks {
    };
};

object nameLabel : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("CAMAC Name:");
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
        XmNleftOffset = 10;
    };
    controls {
    };
    callbacks {
    };
};

object nameField : XmdsExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNdefaultQuote = true;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = L8828$N_NAME;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmdsNautoQuote = true;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
        XmNleftOffset = 110;
    };
    controls {
    };
    callbacks {
    };
};

object commentLabel : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Comment:");
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 40;
        XmNleftOffset = 10;
    };
    controls {
    };
    callbacks {
    };
};

object commentField : XmdsExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNdefaultQuote = true;
        XmNcolumns = 32;
        XmdsNputOnApply = true;
        XmdsNnidOffset = L8828$N_COMMENT;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmdsNautoQuote = true;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 40;
        XmNleftOffset = 110;
    };
    controls {
    };
    callbacks {
    };
};

object bottomButtons : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_NONE;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
    };
    controls {
         managed XmdsXdBoxOnOffButton storeAction;
         managed XmdsXdBoxOnOffButton initAction;
         managed XmForm deviceButtons;
    };
    callbacks {
    };
};

object deviceButtons : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_NONE;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopWidget = XmdsXdBoxOnOffButton initAction;
        XmNtopOffset = 15;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNy = 50;
    };
    controls {
         managed XmdsCancelButton cancelButton;
         managed XmdsResetButton resetButton;
         managed XmdsApplyButton applyButton;
         managed XmdsOkButton okButton;
    };
    callbacks {
    };
};

object okButton : XmdsOkButton widget {
    arguments {
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
    };
    controls {
    };
    callbacks {
    };
};

object applyButton : XmdsApplyButton widget {
    arguments {
        XmNleftAttachment = XmATTACH_POSITION;
        XmNleftPosition = 33;
        XmNleftOffset = -25;
    };
    controls {
    };
    callbacks {
    };
};

object resetButton : XmdsResetButton widget {
    arguments {
        XmNleftAttachment = XmATTACH_POSITION;
        XmNleftPosition = 66;
        XmNleftOffset = -25;
    };
    controls {
    };
    callbacks {
    };
};

object cancelButton : XmdsCancelButton widget {
    arguments {
        XmNrightAttachment = XmATTACH_FORM;
        XmNrightOffset = 10;
    };
    controls {
    };
    callbacks {
    };
};

object initAction : XmdsXdBoxOnOffButton widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("Initialization Action");
        XmdsNnidOffset = L8828$N_INIT_ACTION;
    };
    controls {
    };
    callbacks {
    };
};

object storeAction : XmdsXdBoxOnOffButton widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("Store Action");
        XmdsNnidOffset = L8828$N_STORE_ACTION;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmdsXdBoxOnOffButton initAction;
        XmNleftOffset = 20;
    };
    controls {
    };
    callbacks {
    };
};

object triggerLabel : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("Trigger:");
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopWidget = XmLabelGadget commentLabel;
        XmNtopOffset = 15;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNx = 10;
        XmNy = 76;
    };
    controls {
    };
    callbacks {
    };
};

object trigger : XmdsExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 48;
        XmdsNputOnApply = true;
        XmdsNnidOffset = L8828$N_TRIGGER;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = XmdsExprField commentField;
        XmNleftWidget = XmLabel extClockLabel;
        XmNtopOffset = 10;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 0;
        XmNx = 121;
        XmNy = 74;
    };
    controls {
    };
    callbacks {
    };
};

object extClockLabel : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("External Clock:");
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopWidget = XmLabel triggerLabel;
        XmNtopOffset = 10;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNx = 10;
        XmNy = 107;
    };
    controls {
    };
    callbacks {
    };
};

object externalClock : XmdsExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 48;
        XmdsNputOnApply = true;
        XmdsNnidOffset = L8828$N_EXT_CLOCK;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = XmdsExprField trigger;
        XmNleftWidget = XmdsExprField trigger;
        XmNtopOffset = 10;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 121;
        XmNy = 108;
    };
    controls {
    };
    callbacks {
    };
};

object bulletinBoard : XmBulletinBoard widget {
    arguments {
        XmNshadowThickness = 2;
        XmNshadowType = XmSHADOW_IN;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopWidget = XmdsNidOptionMenu nidOptionMenu1;
        XmNtopOffset = 1;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 10;
        XmNx = 0;
        XmNy = 180;
        XmNheight = 92;
    };
    controls {
         managed XmLabel triggerLabel3;
         managed XmdsExprField active_mem;
         managed XmLabel triggerLabel2;
         managed XmdsExprField trigger1;
         managed XmLabel triggerLabel1;
         managed XmdsNidOptionMenu nidOptionMenu;
    };
    callbacks {
    };
};

object nidOptionMenu : XmdsNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("0"),
	compound_string("1"),
	compound_string("2"),
	compound_string("3"),
	compound_string("4"),
	compound_string("5"),
	compound_string("6"),
	compound_string("7"));
        XmNlabelString = compound_string("Pre Trigger:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = L8828$N_PRE_TRIG;
        XmdsNlabelStrings = string_table(
	compound_string("0/8"),
	compound_string("1/8"),
	compound_string("2/8"),
	compound_string("3/8"),
	compound_string("4/8"),
	compound_string("5/8"),
	compound_string("6/8"),
	compound_string("7/8"));
        XmNx = 260;
        XmNy = 30;
        XmNwidth = 196;
        XmNheight = 39;
    };
    controls {
    };
    callbacks {
    };
};

object triggerLabel1 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("Offset", separate=true) &
 compound_string("(0 - 255)");
        XmNx = 30;
        XmNy = 10;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
    };
};

object trigger1 : XmdsExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 5;
        XmdsNputOnApply = true;
        XmdsNnidOffset = L8828$N_INPUT_OFFSET;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 40;
        XmNy = 50;
    };
    controls {
    };
    callbacks {
    };
};

object triggerLabel2 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("Active Memory");
        XmNx = 120;
        XmNy = 10;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
    };
};

object active_mem : XmdsExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 6;
        XmdsNputOnApply = true;
        XmdsNnidOffset = L8828$N_ACTIVE_MEM;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 130;
        XmNy = 50;
    };
    controls {
    };
    callbacks {
    };
};

object triggerLabel3 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("K");
        XmNx = 190;
        XmNy = 40;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
    };
};

object digChans : XmdsDigChans widget {
    arguments {
        XmdsNnodesPerChannel = L8828$K_NODES_PER_INP;
        XmdsNnid = DEVICE_NID;
        XmdsNchannels = 1;
        XmdsNendIdxNidOffset = L8828$K_INP_ENDIDX;
        XmdsNstartIdxNidOffset = L8828$K_INP_STARTIDX;
        XmdsNdataNidOffset = L8828$K_INP_HEAD;
        XmdsNnidOffset = L8828$N_INPUTS;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopWidget = XmBulletinBoard bulletinBoard;
        XmNtopOffset = 90;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 2;
        XmNx = 0;
        XmNy = 270;
        XmNwidth = 588;
        XmNheight = 65;
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu1 : XmdsNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNlabelStrings = string_table(
	compound_string("250.      MHz"),
	compound_string("125.      MHz"),
	compound_string(" 62.5     MHz"),
	compound_string(" 31.25    MHz"),
	compound_string(" 15.625   MHz"),
	compound_string("  7.8125  MHz"),
	compound_string("  3.90625 MHz"),
	compound_string("   external  "));
        XmdsNvalueStrings = string_table(
	compound_string("250.0"),
	compound_string("125.0"),
	compound_string("62.5"),
	compound_string("31.25"),
	compound_string("15.625"),
	compound_string("7.8125"),
	compound_string("3.90625"),
	compound_string("0.0"));
        XmNlabelString = compound_string("Internal Clock:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = L8828$N_CLOCK;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = XmdsExprField externalClock;
        XmNleftWidget = XmLabel extClockLabel;
        XmNtopOffset = 8;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 10;
        XmNy = 140;
    };
    controls {
    };
    callbacks {
    };
};

!(BX)object dialogShell1 : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNtitle = "LeCroy 8828   200MHz Digitizer";
!(BX)        XmNx = 124;
!(BX)        XmNy = 93;
!(BX)        XmNwidth = 84;
!(BX)        XmNheight = 1;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog l1;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object l1 : XmFormDialog widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};
end module;
