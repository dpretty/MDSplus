#!/bin/sh
#
#
# Manage MDSplus rpm packaging
#
# Usage: pkg mode options
#        mode == add remove list
#
# Modes:
#
# add: Add module to a rpm subpackage
#
#   Usage:    pkg add module-name package-name [-R]
#   examples: pkg add TreeAddNode.c kernel
#             pkg add treeshr/* kernel
#
# remove: Remove module from an rpm subpackage
#
#   Usage:    pkg remove module-name package-name [-R]
#   examples: pkg remove TreeAddNode.c kernel
#             pkg remove treeshr/* kernel
#
# list:   List modules in an rpm subpackage
#
#   Usage:    pkg list package-name
#   examples: pkg list kernel
#             pkg list NONE  (lists all modules not in any package)
#             pkg list ALL   (lists all modules and the package(s) they are in)
case $1 in
  "")
  cat - <<EOF
Usage: $0 pgkadd <module or directory (no wildcards)> <package-name>

          Assigns package dependency to a module or directory tree of modules.

       $0 pkgremove <module or directory (no wildcards)> <package-name>

          Remove package dpendency to a module or directory tree of modules.

       $0 list

          Generates a module package summary in html format.

       $0 list none

          Generates a list of modules that currently do not have a package depency
          assigned.

       $0 list <package-name>

          Generate a list of modules that updates to the package depend on.

       $0 list all

          Generate a module package summary in text format.
      
EOF
  ;;
  pkgadd)
    if [ ! -r `dirname $0`/../rpm/subpackages/$3 ]
    then
      echo Package $3 does not exist
      exit
    fi
    for mod in `find $2`
    do
      pushd `dirname $mod` >/dev/null
      m=$(basename $mod)
      if [ ! -d $m ]
      then
        if ( cvs status $m 2>/dev/null | grep /mdsplus/repos > /dev/null )
        then
          echo "Adding `pwd`/$m to package $3"
          cvs -Q tag -F pkg_$3 $m
        fi
      fi
      popd > /dev/null
    done
  ;;
  pkgremove)
    if [ ! -r `dirname $0`/../rpm/subpackages/$3 ]
    then
      echo Package $3 does not exist
      exit
    fi
    for mod in `find $2`
    do
      pushd `dirname $mod` >/dev/null
      m=$(basename $mod)
      if [ ! -d $m ]
      then
        if ( cvs status $m 2>/dev/null | grep -v Attic | grep /mdsplus/repos > /dev/null )
        then
          echo "Removing `pwd`/$m from package $3"
          cvs -Q tag -d pkg_$3 $m
        fi
      fi
      popd > /dev/null
    done
  ;;
  list)
    case $2 in
    none)
       tmpstatus=$(mktemp)
       dirn=$(dirname $0)
       cd $dirn/..
       cvs -q status -Rv 2>/dev/null > $tmpstatus
       awk '/Repository revision/ {F=substr($4,24,length($4)-25);PKG="";} /pkg_/ {PKG=substr($1,5) " "} /====/ {if (length(F) > 0 && length(PKG) == 0) print F; F=""}' $tmpstatus | sort
       rm -f $tmpstatus
    ;;
    all)
       tmpstatus=$(mktemp)
       dirn=$(dirname $0)
       cd $dirn/..
       cvs -q status -Rv 2>/dev/null > $tmpstatus
       awk '/Repository revision/ {F=substr($4,24,length($4)-25);PKG=""} /pkg_/ {PKG=PKG substr($1,5) " "} /====/ {if (length(F) > 0 ) { if (length(PKG) == 0) PKG="None"; print F "   " PKG}; F=""}' $tmpstatus | sort
       rm -f $tmpstatus
    ;;
    "")
       tmpstatus=$(mktemp)
       dirn=$(dirname $0)
       cd $dirn/..
       cvs -q status -Rv 2>/dev/null > $tmpstatus
       echo "<head><title>MDSplus Packaging Information - Sources</title></head>"
       echo "<h2>Modules sorted by module name</h2>"
       echo "<table><tr><td><b>Module</b></td><td><b>Package(s)</b></td></tr>"
       awk '/Repository revision/ {F=substr($4,24,length($4)-25);PKG=""} /pkg_/ {PKG=PKG substr($1,5) "<b/>"} /====/ {if (length(F) > 0 ) { if (length(PKG) == 0) PKG="None"; print "<tr><td>" F "</td><td>" PKG "</td></tr>"}; F=""}' $tmpstatus | sort
       echo "</table>"
       echo "<h2>Modules sorted by package name</hd>"
       echo "<table><tr><td><b>Package</b></td><td><b>Module(s)</b></td></tr>"
       awk '/Repository revision/ {F=substr($4,24,length($4)-25);PKG=""} /pkg_/ {PKG=substr($1,5)} /====/ {if (length(F) > 0) { if (length(PKG) == 0) PKG="None"; print "<tr><td>" PKG "</td><td>" F "</td></tr>"}; F=""}' $tmpstatus | sort
       echo "</table>"
       rm -f $tmpstatus
    ;;
    *)
       tmpstatus=$(mktemp)
       dirn=$(dirname $0)
       cd $dirn/..
       cvs -q status -Rv 2>/dev/null > $tmpstatus
       awk '/Repository revision/ {F=substr($4,24,length($4)-25)} /pkg_'$2'/ {print F}' $tmpstatus | sort
       rm -f $tmpstatus
    ;;
    esac
  ;;
  *)
     echo "Unknown mode /$1/"
     echo
     $0
  ;;
esac
