/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RFXDiagTimesV1Setup.java
 *
 * Created on Jan 4, 2010, 3:07:17 PM
 */

/**
 *
 * @author taliercio
 */
public class RFXDiagTimesV1Setup extends DeviceSetup {

    /** Creates new form BeanForm */
    public RFXDiagTimesV1Setup() {
        initComponents();
        setSize(300, 800);
        this.pack();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deviceButtons1 = new DeviceButtons();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        deviceChoice1 = new DeviceChoice();
        deviceField1 = new DeviceField();
        deviceChoice2 = new DeviceChoice();
        jPanel4 = new javax.swing.JPanel();
        deviceTable1 = new DeviceTable();
        jPanel5 = new javax.swing.JPanel();
        deviceField2 = new DeviceField();
        deviceField3 = new DeviceField();
        jPanel6 = new javax.swing.JPanel();
        deviceField4 = new DeviceField();
        jLabel3 = new javax.swing.JLabel();
        deviceField5 = new DeviceField();
        jLabel4 = new javax.swing.JLabel();


        setDeviceProvider("localhost");
        setDeviceTitle("RFX Diagnostic Timing Configuration");
        setDeviceType("RFXDiagTimes");

        deviceButtons1.setCheckExpressions(new String[] {"_triggerTime >= -0.025", "( _trigMode == 'EXT_10_DT' ) ? ( sum( _delayArray >= 0.025 ) == 10 ) : (  ( _trigMode == 'EXT_RT' ) ? 1BU  : _delayArray[0] >= 0.025 )"});
        deviceButtons1.setCheckMessages(new String[] {"Trigger time must be greater than -25ms", "The delay between the pulses must be greater than 25ms"});
        deviceButtons1.setMethods(new String[] {"dtsr_init"});
        getContentPane().add(deviceButtons1, java.awt.BorderLayout.PAGE_END);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(2, 0));

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        deviceChoice1.setChoiceItems(new String[] {"EXT_DT", "EXT_10_DT", "EXT_RT"});
        deviceChoice1.setIdentifier("trigMode");
        deviceChoice1.setLabelString("Triger Mode");
        deviceChoice1.setOffsetNid(3);
        deviceChoice1.setUpdateIdentifier("");
        jPanel3.add(deviceChoice1);

        deviceField1.setIdentifier("triggerTime");
        deviceField1.setLabelString("Trigger Time :");
        deviceField1.setOffsetNid(2);
        jPanel3.add(deviceField1);

        //deviceChoice2.setChoiceItems(new String[] {"N7_AMP", "N7_AMP_PH", "RATIO_DOM_SEC", "RATIO_DOM_SEC_PH"});
/*

Removed Real time thomson scattaring parameters (24-10-2012)

        deviceChoice2.setChoiceItems(new String[] {"M1_N7_AMP", "M1_N7_AMP_PH", "RATIO_DOM_SEC", "RATIO_DOM_SEC_PH", "M0_N1_AMP", "M0_N1_AMP_PH", "M0_N7_AMP", "M0_N7_AMP_PH"});
		deviceChoice2.setIdentifier("rtTriggerMode");
        deviceChoice2.setLabelString("Real Time Trigger Mode : ");
        deviceChoice2.setOffsetNid(4);
        deviceChoice2.setUpdateIdentifier("");
        jPanel3.add(deviceChoice2);
*/
        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());

        deviceTable1.setColumnNames(new String[] {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"});
        deviceTable1.setIdentifier("delayArray");
        deviceTable1.setNumCols(10);
        deviceTable1.setNumRows(1);
        deviceTable1.setOffsetNid(5);
        deviceTable1.setRowNames(new String[] {"Delay_Pulse"});
        jPanel4.add(deviceTable1, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel4);

/*

Removed Real time thomson scattaring parameters (24-10-2012)


        deviceField2.setIdentifier("ampMin");
        deviceField2.setLabelString("Amplitude [T]  OR Dom/Sec Min : ");
        deviceField2.setOffsetNid(7);
        jPanel5.add(deviceField2);

        deviceField3.setIdentifier("ampMax");
        deviceField3.setLabelString("Amplitude [T]  OR Dom/Sec Max : ");
        deviceField3.setOffsetNid(6);
        jPanel5.add(deviceField3);

        jPanel2.add(jPanel5);

        deviceField4.setIdentifier("phaseMin");
        deviceField4.setLabelString("Phase Min : ");
        deviceField4.setOffsetNid(9);
        jPanel6.add(deviceField4);

        jLabel3.setText("[ยบ]");
        jPanel6.add(jLabel3);

        deviceField5.setIdentifier("phaseMax");
        deviceField5.setLabelString("Phase Max : ");
        deviceField5.setOffsetNid(8);
        jPanel6.add(deviceField5);

        jLabel4.setText("[ยบ]");
        jPanel6.add(jLabel4);

        jPanel2.add(jPanel6);
*/

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Thonson Scattering", jPanel1);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private DeviceButtons deviceButtons1;
    private DeviceChoice deviceChoice1;
    private DeviceChoice deviceChoice2;
    private DeviceField deviceField1;
    private DeviceField deviceField2;
    private DeviceField deviceField3;
    private DeviceField deviceField4;
    private DeviceField deviceField5;
    private DeviceTable deviceTable1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

}
